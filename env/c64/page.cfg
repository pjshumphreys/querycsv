MEMORY {
  ZP:      file = "",   start = $0002, size = $001A, define = yes;
  RAM:     file = "",   start = $0800, size = $001A, define = yes;
  RAM2:    file = "",   start = $081A, size = $97E6, define = yes;
  FAKERAM: file = "",   start = $0800, size = $9800, define = yes;
  ROML:    file = "", start = $8000, size = $2000, define = yes;
  ROMH:    file = %O, start = $A000, size = $2000, fill = yes, fillval = $ff, define = yes;
  MAIN: file = "", start = $8000, size = $2000, fill = yes, fillval = $ff, define = yes;
}
SEGMENTS {
    ZEROPAGE:     load = ZP,        type = zp,  define = yes;
    DATA:         load = RAM2,      type = rw,  define = yes;
    BSS:          load = RAM2,      type = bss, define = yes;
    HEAP:         load = RAM2,      type = bss, optional = yes; # must sit just below stack
    INIT:         load = MAIN,      type = ro;
    STARTUP:      load = MAIN,      type = ro;
    CODE:         load = ROMH,      type = ro;
    RODATA:       load = ROMH,      type = ro;
    ONCE:      load = MAIN,   type = ro;
}
FEATURES {
    CONDES: segment = CODE,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
            segment = RODATA,
            label = __INTERRUPTOR_TABLE__,
            count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
  __STACKSIZE__:      value = $800, type = weak;
}
