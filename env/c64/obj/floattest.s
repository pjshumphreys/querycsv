;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.import		__ctof
	.import		__itof
	.import		__ftoi
	.import		__fdiv
	.import		__fmul
	.import		__fadd
	.import		__fpow
	.import		__fcmp
	.import		__fsin
	.import		__fcos
	.export		_strbuf
	.export		_fd
	.export		_fs
	.export		_a
	.export		_b
	.export		_c1
	.export		_c
	.export		_i
	.export		_t
	.export		_n
	.export		_csetpoint8
	.export		_calcsin
	.export		_calccos
	.export		_var_bs
	.export		_var_fs
	.export		_var_i
	.export		_var_w
	.export		_var_j
	.export		_var_k
	.export		_var_co
	.export		_f1
	.export		_main

.segment	"RODATA"

L0001:
	.byte	$20,$00,$2A,$0D,$00,$49,$3A,$25,$30,$38,$4C,$58,$0D,$00,$49,$3A
	.byte	$25,$44,$0D,$00,$0C,$20,$C6,$4C,$4F,$41,$54,$54,$45,$53,$54,$0D
	.byte	$00,$41,$3A,$25,$58,$0D,$00,$42,$3A,$25,$58,$0D,$00,$41,$3A,$25
	.byte	$44,$0D,$00,$43,$31,$3A,$25,$44,$0D,$00,$43,$4D,$50,$3A,$20,$25
	.byte	$44,$0D,$00,$41,$2B,$42,$3A,$25,$30,$38,$4C,$58,$0D,$00,$4E,$3A
	.byte	$25,$44,$0D,$00,$4E,$3A,$25,$44,$0D,$00,$4E,$3A,$25,$44,$0D,$00

.segment	"BSS"

_strbuf:
	.res	32,$00
_fd:
	.res	4,$00
_fs:
	.res	4,$00
_a:
	.res	4,$00
_b:
	.res	4,$00
_c1:
	.res	4,$00
_c:
	.res	2,$00
_i:
	.res	2,$00
_t:
	.res	2,$00
_n:
	.res	2,$00
_var_bs:
	.res	2,$00
_var_fs:
	.res	2,$00
_var_i:
	.res	4,$00
_var_w:
	.res	1,$00
_var_j:
	.res	1,$00
_var_k:
	.res	4,$00
_var_co:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ csetpoint8 (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_csetpoint8: near

.segment	"CODE"

;
; while(x--)
;
L0009:	ldy     #$00
	lda     (sp),y
	pha
	sec
	sbc     #$01
	sta     (sp),y
	pla
	tax
	beq     L000A
;
; printf(" ");
;
	lda     #<(L0001)
	ldx     #>(L0001)
	jsr     pushax
	ldy     #$02
	jsr     _printf
;
; } 
;
	jmp     L0009
;
; printf("*\n");
;
L000A:	lda     #<(L0001+2)
	ldx     #>(L0001+2)
	jsr     pushax
	ldy     #$02
	jsr     _printf
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ calcsin (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_calcsin: near

.segment	"CODE"

;
; for(i=0;i<YNUM;i++)
;
	lda     #$00
	sta     _i
	sta     _i+1
L0011:	lda     _i
	cmp     #$20
	lda     _i+1
	sbc     #$00
	bvc     L0018
	eor     #$80
L0018:	bpl     L0012
;
; csetpoint8(XNUM2+(ftoi(fmul(fsin(deg2rad(itof(i),itof(YNUM))),itof(YNUM2)))/(YNUM/XNUM)));
;
	lda     _i
	ldx     _i+1
	jsr     pushax
	jsr     __itof
	jsr     pusheax
	lda     #$20
	jsr     pusha0
	jsr     __itof
	jsr     pusheax
	jsr     __fdiv
	jsr     pusheax
	ldx     #$C9
	lda     #$83
	sta     sreg
	lda     #$00
	sta     sreg+1
	lda     #$0F
	jsr     pusheax
	jsr     __fmul
	jsr     pusheax
	jsr     __fsin
	jsr     pusheax
	lda     #$10
	jsr     pusha0
	jsr     __itof
	jsr     pusheax
	jsr     __fmul
	jsr     pusheax
	jsr     __ftoi
	ldy     #$10
	jsr     incaxy
	jsr     pusha
	jsr     _csetpoint8
;
; for(i=0;i<YNUM;i++)
;
	lda     _i
	ldx     _i+1
	jsr     incax1
	sta     _i
	stx     _i+1
	jmp     L0011
;
; }
;
L0012:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ calccos (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_calccos: near

.segment	"CODE"

;
; for(i=0;i<YNUM;i++)
;
	lda     #$00
	sta     _i
	sta     _i+1
L0035:	lda     _i
	cmp     #$20
	lda     _i+1
	sbc     #$00
	bvc     L003C
	eor     #$80
L003C:	bmi     L00C1
;
; }
;
	rts
;
; fs=deg2rad(itof(i),itof(YNUM));
;
L00C1:	lda     _i
	ldx     _i+1
	jsr     pushax
	jsr     __itof
	jsr     pusheax
	lda     #$20
	jsr     pusha0
	jsr     __itof
	jsr     pusheax
	jsr     __fdiv
	jsr     pusheax
	ldx     #$C9
	lda     #$83
	sta     sreg
	lda     #$00
	sta     sreg+1
	lda     #$0F
	jsr     pusheax
	jsr     __fmul
	sta     _fs
	stx     _fs+1
	ldy     sreg
	sty     _fs+2
	ldy     sreg+1
	sty     _fs+3
;
; fd=fmul(fcos(fs),itof(YNUM2));
;
	lda     _fs+3
	sta     sreg+1
	lda     _fs+2
	sta     sreg
	ldx     _fs+1
	lda     _fs
	jsr     pusheax
	jsr     __fcos
	jsr     pusheax
	lda     #$10
	jsr     pusha0
	jsr     __itof
	jsr     pusheax
	jsr     __fmul
	sta     _fd
	stx     _fd+1
	ldy     sreg
	sty     _fd+2
	ldy     sreg+1
	sty     _fd+3
;
; csetpoint8(XNUM2+(ftoi(fd)/(YNUM/XNUM)));
;
	lda     _fd+3
	sta     sreg+1
	lda     _fd+2
	sta     sreg
	ldx     _fd+1
	lda     _fd
	jsr     pusheax
	jsr     __ftoi
	ldy     #$10
	jsr     incaxy
	jsr     pusha
	jsr     _csetpoint8
;
; for(i=0;i<YNUM;i++)
;
	lda     _i
	ldx     _i+1
	jsr     incax1
	sta     _i
	stx     _i+1
	jmp     L0035

.endproc

; ---------------------------------------------------------------
; void __near__ f1 (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_f1: near

.segment	"CODE"

;
; printf("i:%08lx\n",_ctof(0));
;
	lda     #<(L0001+5)
	ldx     #>(L0001+5)
	jsr     pushax
	lda     #$00
	jsr     pusha
	jsr     __ctof
	jsr     pusheax
	ldy     #$06
	jsr     _printf
;
; var_bs=1024;
;
	ldx     #$04
	lda     #$00
	sta     _var_bs
	stx     _var_bs+1
;
; var_fs=55304;
;
	ldx     #$D8
	lda     #$08
	sta     _var_fs
	stx     _var_fs+1
;
; var_i=itof(2);while(1)
;
	lda     #$02
	jsr     pusha0
	jsr     __itof
L00C8:	sta     _var_i
	stx     _var_i+1
	ldy     sreg
	sty     _var_i+2
	ldy     sreg+1
	sty     _var_i+3
;
; printf("i:%d\n",ftoi(var_i));
;
	lda     #<(L0001+14)
	ldx     #>(L0001+14)
	jsr     pushax
	lda     _var_i+3
	sta     sreg+1
	lda     _var_i+2
	sta     sreg
	ldx     _var_i+1
	lda     _var_i
	jsr     pusheax
	jsr     __ftoi
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; var_bs++;if(var_bs==1030)break;
;
	lda     _var_bs
	ldx     _var_bs+1
	jsr     incax1
	sta     _var_bs
	stx     _var_bs+1
	lda     _var_bs+1
	cmp     #$04
	bne     L00C3
	lda     _var_bs
	cmp     #$06
	beq     L006A
;
; var_i=fadd(var_i,0x00818000);
;
L00C3:	lda     _var_i+3
	sta     sreg+1
	lda     _var_i+2
	sta     sreg
	ldx     _var_i+1
	lda     _var_i
	jsr     pusheax
	ldx     #$80
	lda     #$81
	sta     sreg
	lda     #$00
	sta     sreg+1
	jsr     pusheax
	jsr     __fadd
;
; };
;
	jmp     L00C8
;
; }
;
L006A:	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; printf("\x93 Floattest\n");
;
	lda     #<(L0001+20)
	ldx     #>(L0001+20)
	jsr     pushax
	ldy     #$02
	jsr     _printf
;
; f1();
;
	jsr     _f1
;
; b=ctof(2);
;
	lda     #$02
	jsr     pusha
	jsr     __ctof
	sta     _b
	stx     _b+1
	ldy     sreg
	sty     _b+2
	ldy     sreg+1
	sty     _b+3
;
; a=ctof(2);
;
	lda     #$02
	jsr     pusha
	jsr     __ctof
	sta     _a
	stx     _a+1
	ldy     sreg
	sty     _a+2
	ldy     sreg+1
	sty     _a+3
;
; c1=fpow(a,b);
;
	lda     _a+3
	sta     sreg+1
	lda     _a+2
	sta     sreg
	ldx     _a+1
	lda     _a
	jsr     pusheax
	lda     _b+3
	sta     sreg+1
	lda     _b+2
	sta     sreg
	ldx     _b+1
	lda     _b
	jsr     pusheax
	jsr     __fpow
	sta     _c1
	stx     _c1+1
	ldy     sreg
	sty     _c1+2
	ldy     sreg+1
	sty     _c1+3
;
; printf("a:%x\n",a);
;
	lda     #<(L0001+33)
	ldx     #>(L0001+33)
	jsr     pushax
	lda     _a+3
	sta     sreg+1
	lda     _a+2
	sta     sreg
	ldx     _a+1
	lda     _a
	jsr     pusheax
	ldy     #$06
	jsr     _printf
;
; printf("b:%x\n",b);
;
	lda     #<(L0001+39)
	ldx     #>(L0001+39)
	jsr     pushax
	lda     _b+3
	sta     sreg+1
	lda     _b+2
	sta     sreg
	ldx     _b+1
	lda     _b
	jsr     pusheax
	ldy     #$06
	jsr     _printf
;
; printf("a:%d\n",ftoi(a));
;
	lda     #<(L0001+45)
	ldx     #>(L0001+45)
	jsr     pushax
	lda     _a+3
	sta     sreg+1
	lda     _a+2
	sta     sreg
	ldx     _a+1
	lda     _a
	jsr     pusheax
	jsr     __ftoi
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; printf("c1:%d\n",ftoi(c1));
;
	lda     #<(L0001+51)
	ldx     #>(L0001+51)
	jsr     pushax
	lda     _c1+3
	sta     sreg+1
	lda     _c1+2
	sta     sreg
	ldx     _c1+1
	lda     _c1
	jsr     pusheax
	jsr     __ftoi
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; printf("cmp: %d\n",fcmp(a,b));
;
	lda     #<(L0001+58)
	ldx     #>(L0001+58)
	jsr     pushax
	lda     _a+3
	sta     sreg+1
	lda     _a+2
	sta     sreg
	ldx     _a+1
	lda     _a
	jsr     pusheax
	lda     _b+3
	sta     sreg+1
	lda     _b+2
	sta     sreg
	ldx     _b+1
	lda     _b
	jsr     pusheax
	jsr     __fcmp
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; printf("a+b:%08lx\n",c1);
;
	lda     #<(L0001+67)
	ldx     #>(L0001+67)
	jsr     pushax
	lda     _c1+3
	sta     sreg+1
	lda     _c1+2
	sta     sreg
	ldx     _c1+1
	lda     _c1
	jsr     pusheax
	ldy     #$06
	jsr     _printf
;
; n=ftoi(a);
;
	lda     _a+3
	sta     sreg+1
	lda     _a+2
	sta     sreg
	ldx     _a+1
	lda     _a
	jsr     pusheax
	jsr     __ftoi
	sta     _n
	stx     _n+1
;
; printf("n:%d\n",n);
;
	lda     #<(L0001+78)
	ldx     #>(L0001+78)
	jsr     pushax
	lda     _n
	ldx     _n+1
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; n=ftoi(b);
;
	lda     _b+3
	sta     sreg+1
	lda     _b+2
	sta     sreg
	ldx     _b+1
	lda     _b
	jsr     pusheax
	jsr     __ftoi
	sta     _n
	stx     _n+1
;
; printf("n:%d\n",n);
;
	lda     #<(L0001+84)
	ldx     #>(L0001+84)
	jsr     pushax
	lda     _n
	ldx     _n+1
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; n=ftoi(c1);
;
	lda     _c1+3
	sta     sreg+1
	lda     _c1+2
	sta     sreg
	ldx     _c1+1
	lda     _c1
	jsr     pusheax
	jsr     __ftoi
	sta     _n
	stx     _n+1
;
; printf("n:%d\n",n);
;
	lda     #<(L0001+90)
	ldx     #>(L0001+90)
	jsr     pushax
	lda     _n
	ldx     _n+1
	jsr     pushax
	ldy     #$04
	jsr     _printf
;
; ++*(unsigned char*)0xd020;
;
L00BF:	inc     $D020
;
; }
;
	jmp     L00BF

.endproc

