MEMORY {
  ZP:       file = "",   start = $0002, size = $001A, define = yes;
  CPUSTACK: file = "",   start = $0100, size = $0100;
  STARTUP:  file = "",   start = $0100, size = $0100;
  RAM:      file = "",   start = $0800, size = $9800, define = yes;
  RAM3:     file = "",   start = $C000, size = $1000;
  RAM4:     file = "",   start = $E000, size = $1FFA;
  ROM1A:    file = "querycsv.bin", start = $8000, size = $2000, fill = yes, fillval = $ff, define = yes;
  ROM2A:    file = "querycsv.bin", start = $A000, size = $1FFA, fill = yes, fillval = $ff, define = yes;
  VECTORS:  file = "querycsv.bin", start = $FFFA, size = $0006, fill = yes, fillval = $ff, define = yes;
  ROM1B:    file = "querycsv.bin", start = $8000, size = $2000, fill = yes, fillval = $ff, define = yes;
  RAM2B:    file = "",             start = $A000, size = $2000;
  ROM2B:    file = "querycsv.bin", start = $A000, size = $2000, fill = yes, fillval = $ff, define = yes;
}
SEGMENTS {
    ZEROPAGE:     load = ZP,                    type = zp,  define = yes;
    ZPSAVE:       load = RAM,                   type = rw,  define = yes;
    DATA:         load = ROM1B, run = RAM,      type = rw,  define = yes;
    BSS:          load = RAM,                   type = bss, define = yes;
    HEAP:         load = RAM,                   type = bss, optional = yes; # must sit just below stack
    ULTIMAX:      load = ROM2A, run = RAM4,     type = ro;
    LOADER:       load = ROM2A, run = STARTUP,  type = ro   define = yes;
    STARTUP:      load = ROM2A, run = RAM3,     type = ro,  define = yes;
    VECTORS:      load = VECTORS,               type = ro;
    RODATA:       load = ROM2B,                 type = ro;
    INIT:         load = ROM2B,                 type = ro;
    CODE:         load = ROM2B,                 type = ro;
}
FEATURES {
    CONDES: segment = CODE,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
            segment = RODATA,
            label = __INTERRUPTOR_TABLE__,
            count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
#  __STACKSIZE__:    type = weak,   value = $0800; # 2k stack
}
